models:
  - name: fct_orders
    description: Order overview data mart, offering key details for each order inlcluding if it's a customer's first order and a food vs. drink item breakdown. One row per order.
#    data_tests:
#      - dbt_utils.expression_is_true:
#          expression: "order_total < 99"
    columns:
      - name: order_id
        description: The unique key of the orders mart.
        data_tests:
          - not_null
          - unique
      - name: customer_id
        description: The foreign key relating to the customer who placed the order.
        data_tests:
          - relationships:
              to: ref('stg_customers')
              field: customer_id
          - unique:
              severity: warn
              limit: 20
              store_failures: true
              schema: test_failures #no lo coge, por alguna configuraciÃ³n superior?

      - name: order_total
        description: The total amount of the order in USD including tax.
        data_tests:
          - assert_dollars_spent_are_greater_than_one('fct_orders','order_total')
          - dbt_expectations.expect_column_values_to_be_between:
              max_value: 99  # (Optional)
              row_condition: "order_id is not null" # (Optional)
              strictly: true # (Optional. Default is 'false'. Adds an 'or equal to' to the comparison operator for min/max)
              severity: error
              error_if: ">20" #solo dara error si es mayor a 20, si es menor warning
              warn_if: ">10"
              limit: 15 #para al encontrar 15 errores.



      - name: ordered_at
        description: The timestamp the order was placed at.
      - name: order_cost
        description: The sum of supply expenses to fulfill the order.
      - name: is_food_order
        description: A boolean indicating if this order included any food items.
      - name: is_drink_order
        description: A boolean indicating if this order included any drink items.
